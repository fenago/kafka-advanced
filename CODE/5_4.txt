import kafka.serializer.StringDecoder
import org.apache.Spark.SparkConf
import org.apache.Spark.streaming.kafka.KafkaUtils
import org.apache.Spark.streaming.{Seconds, StreamingContext}

object DirectKafkaWordCount {
  def main(args: Array[String]) {


    val brokers: String = "localhost:2181"
    val topics: String = "test"

    val SparkConf = new SparkConf().setAppName("DirectKafkaWordCount")
    val ssc = new StreamingContext(SparkConf, Seconds(2))
    val topicsSet = topics.split(",").toSet
    val kafkaParams = Map[String, String]("metadata.broker.list" -> brokers)
    val messages = KafkaUtils.createDirectStream[String, String, StringDecoder, StringDecoder](
      ssc, kafkaParams, topicsSet)

    val lines = messages.map(_._2)
    val words = lines.flatMap(_.split(" "))
    val wordCounts = words.map(x => (x, 1L)).reduceByKey(_ + _)
    wordCounts.print()

    ssc.start()
    ssc.awaitTermination()
  }
}